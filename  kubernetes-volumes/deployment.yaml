apiVersion: apps/v1
kind: Deployment
metadata:
  name: homework-deployment
  namespace: homework
  labels:
    app: homework-web
spec:
  replicas: 3
  selector:
    matchLabels:
      app: homework-web
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: homework-web
    spec:
      volumes:
        - name: shared-volume
          persistentVolumeClaim:
            claimName: homework-pvc  # Используем PVC вместо emptyDir
        - name: config-volume
          configMap:
            name: homework-config  # Монтируем ConfigMap
        - name: nginx-config  # Новый volume для nginx.conf
          configMap:
            name: nginx-config  # ConfigMap с конфигурацией Nginx
      initContainers:
        - name: init-container
          image: busybox
          command: ['sh', '-c', 'echo "<html><body><h1>Hello from init-container!</h1></body></html>" > /init/index.html']
          volumeMounts:
            - name: shared-volume
              mountPath: /init
      containers:
        - name: web-container
          image: nginx
          ports:
            - containerPort: 80
          volumeMounts:
            - name: shared-volume
              mountPath: /usr/share/nginx/html
            - name: config-volume
              mountPath: /homework/conf  # Монтируем ConfigMap в директорию
            - name: nginx-config
              mountPath: /etc/nginx/nginx.conf # Монтируем в контейнер
              subPath: nginx.conf # Указываем, что монтируем только один файл
          lifecycle:
            preStop:
              exec:
                command: ['sh', '-c', 'rm -f /homework/index.html']
          readinessProbe:
            httpGet:
              path: /index.html
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 10
      restartPolicy: Always
      nodeSelector:
        homework: "true"